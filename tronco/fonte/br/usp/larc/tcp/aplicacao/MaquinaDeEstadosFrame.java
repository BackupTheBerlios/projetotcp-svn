/*
 * @(#)MaquinaDeEstadosFrame.java	1.0 31/04/2004
 *
 * Copyleft (L) 2004 Laboratório de Arquitetura e Redes de Computadores
 * Escola Politécnica da Universidade de São Paulo.
 *
 */
package br.usp.larc.tcp.aplicacao;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;

import br.usp.larc.tcp.protocolo.Decoder;
import br.usp.larc.tcp.protocolo.MaquinaDeEstados;
import br.usp.larc.tcp.protocolo.TCP;

/** 
 * Classe que representa a Interface HM Maquina de Estados.
 * Detalhes e dicas de implementação podem ser consultadas nas Apostilas.
 *
 * Procure sempre usar o paradigma Orientado a Objeto, a simplicidade e a 
 * criatividade na implementação do seu projeto.
 *  
 *
 * @author	Laboratório de Arquitetura e Redes de Computadores.
 * @version	1.0 Agosto 2003.
 */
/**
 * @author acdcp
 */
public class MaquinaDeEstadosFrame extends javax.swing.JFrame {
    
    /** Creates new form MaquinaDeEstadosFrame */
//    public MaquinaDeEstadosFrame() {
//        initComponents();
//    }
    
    /**
     * Creates new form Monitor
     * 
     * @param _maquinaDeEstados
     */
    public MaquinaDeEstadosFrame (MaquinaDeEstados _maquinaDeEstados)
    {
        this.maquinaDeEstados = _maquinaDeEstados;
        this.initComponents ();
        this.setSize (590, 550);
        this.idConexao = _maquinaDeEstados.getIdConexao ();
        this.setTitle ("Máquina de Estado " + this.idConexao + " (IPSimul = "
                       + this.maquinaDeEstados.getIpSimuladoLocalBytePonto () + " : "
                       + this.maquinaDeEstados.getPortaLocal () + ")");
        this.jtfHost.setText(this.maquinaDeEstados.getIpSimuladoLocalBytePonto ());
        this.setVisible (true);
    }

    
    /**
     * @param _flag
     */
    public void habilitaNovaConexao (boolean _flag)
    {
        /*
        if (_flag)
        {
            this.jlTitulo2.setForeground (new java.awt.Color (0, 153, 0));
            this.jlTitulo2.setHorizontalAlignment (javax.swing.SwingConstants.CENTER);
            this.jlTitulo2.setText ("Ativado");
        }
        else
        {
            this.jlTitulo2.setForeground (new java.awt.Color (204, 0, 0));
            this.jlTitulo2.setHorizontalAlignment (javax.swing.SwingConstants.CENTER);
            this.jlTitulo2.setText ("Desativado");
        }
        */

        this.jbActiveOpen.setEnabled (_flag);
        this.jbPassiveOpen.setEnabled (_flag);
        this.jtfPorta.setEditable (_flag);
        this.jtfHost.setEditable (_flag);

        this.jbEnviar.setEnabled (!_flag);
        this.jbClose.setEnabled (!_flag);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()
    {
        this.jPanel1 = new JPanel ();
        this.jLabelnformacoesConexao = new JLabel ();
        this.jPanel2 = new javax.swing.JPanel ();
        this.jbActiveOpen = new javax.swing.JButton ();
        this.jbPassiveOpen = new javax.swing.JButton ();
        this.jbEnviar = new javax.swing.JButton ();
        this.jbClose = new javax.swing.JButton ();
        this.jLabelHost = new javax.swing.JLabel ();
        this.jLabelPorta = new javax.swing.JLabel ();
        this.jtfHost = new javax.swing.JTextField ();
        this.jtfPorta = new javax.swing.JTextField ();
        this.jLabelDadosEnviados = new javax.swing.JLabel ();
        this.jLabelNumBytesEnviados = new javax.swing.JLabel ();
        this.jScrollPane1 = new javax.swing.JScrollPane ();
        this.jTextAreaDadosEnviados = new javax.swing.JTextArea ();
        this.jPanel3 = new javax.swing.JPanel ();
        this.jLabelEstado = new javax.swing.JLabel ();
        this.jLabelPrimitiva = new javax.swing.JLabel ();
        this.jlSentido = new javax.swing.JLabel ();
        this.jlSegmento = new javax.swing.JLabel ();
        this.jScrollPane2 = new javax.swing.JScrollPane ();
        this.jtaEstado = new javax.swing.JTextArea ();
        this.jScrollPane3 = new javax.swing.JScrollPane ();
        this.jtaPrimitiva = new javax.swing.JTextArea ();
        this.jScrollPane4 = new javax.swing.JScrollPane ();
        this.jtaSentido = new javax.swing.JTextArea ();
        this.jScrollPane5 = new javax.swing.JScrollPane ();
        this.jtaDescricaoSegmento = new javax.swing.JTextArea ();
        this.jPanel4 = new javax.swing.JPanel ();
        this.jButtonAjuda = new javax.swing.JButton ();
        this.jButtonReset = new javax.swing.JButton ();
        this.jLabelTimeout = new javax.swing.JLabel ();
        this.jLabelTamJan = new javax.swing.JLabel ();
        this.jLabelTamSeg = new javax.swing.JLabel ();
        this.jTextFieldTimeout = new javax.swing.JTextField ();
        this.jtfTamJan = new javax.swing.JTextField ();
        this.jTextFieldTamSeg = new javax.swing.JTextField ();
        this.jPanel5 = new javax.swing.JPanel ();
        this.jLabelEstAtual = new javax.swing.JLabel ();
        this.jLabelNumSeq = new javax.swing.JLabel ();
        this.jLabelNumACK = new javax.swing.JLabel ();
        this.jTextFieldNumSeq = new javax.swing.JTextField ();
        this.jtfEstAtual = new javax.swing.JTextField ();
        this.jTextFieldNumACK = new javax.swing.JTextField ();
        this.jPanel6 = new javax.swing.JPanel ();
        this.jScrollPane6 = new javax.swing.JScrollPane ();
        this.jTextAreaDadosRecebidos = new javax.swing.JTextArea ();
        this.jPanel7 = new javax.swing.JPanel ();
        this.jLabel1 = new javax.swing.JLabel ();

        getContentPane().setLayout(null);

        setResizable(false);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent evt) {
                exitForm(evt);
            }
        });

        this.jPanel1.setLayout(null);

        this.jPanel1.setBorder(new TitledBorder(new EtchedBorder(), "Conexão", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Microsoft Sans Serif", 0, 12), Color.red));
        this.jLabelnformacoesConexao.setFont(new Font("Microsoft Sans Serif", 0, 10));
        this.jPanel1.add(this.jLabelnformacoesConexao);
        this.jLabelnformacoesConexao.setBounds(10, 20, 350, 30);

        getContentPane().add(this.jPanel1);
        this.jPanel1.setBounds(5, 0, 370, 60);

        this.jPanel2.setLayout(null);

        this.jPanel2.setBorder (new TitledBorder (new EtchedBorder (), "Primitivas",
                TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font (
                        "Microsoft Sans Serif", 0, 12), Color.red));
        this.jbActiveOpen.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jbActiveOpen.setText("ActiveOpen");
        this.jbActiveOpen.setBorder(new BevelBorder(BevelBorder.RAISED));
        this.jbActiveOpen.setHorizontalTextPosition(SwingConstants.CENTER);
        this.jbActiveOpen.setMargin(new Insets(2, 2, 2, 2));
        this.jbActiveOpen.setEnabled(true);
        this.jPanel2.add(this.jbActiveOpen);
        this.jbActiveOpen.setBounds(10, 20, 80, 30);
        this.jbActiveOpen.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jbActiveOpenActionPerformed(evt);
            }
        });
        
        this.jbPassiveOpen.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jbPassiveOpen.setText("PassiveOpen");
        this.jbPassiveOpen.setMaximumSize(new Dimension(500, 500));
        this.jbPassiveOpen.setBorder(new BevelBorder(BevelBorder.RAISED));
        this.jbPassiveOpen.setHorizontalTextPosition(SwingConstants.CENTER);
        this.jbPassiveOpen.setEnabled(true);
        this.jPanel2.add(this.jbPassiveOpen);
        this.jbPassiveOpen.setBounds(10, 60, 100, 30);
        this.jbPassiveOpen.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jbPassiveOpenActionPerformed(evt);
            }
        });

        this.jbEnviar.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jbEnviar.setText("Enviar");
        this.jbEnviar.setEnabled(false);
        this.jbEnviar.setBorder(new BevelBorder(BevelBorder.RAISED));
        this.jbEnviar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jbEnviarActionPerformed(evt);
            }
        });
        this.jPanel2.add(this.jbEnviar);
        this.jbEnviar.setBounds(140, 60, 100, 30);

        this.jbClose.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jbClose.setText("Close");
        this.jbClose.setEnabled(false);
        this.jbClose.setBorder(new BevelBorder(BevelBorder.RAISED));
        this.jbClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jbCloseActionPerformed(evt);
            }
        });
        this.jPanel2.add(this.jbClose);
        this.jbClose.setBounds(260, 60, 100, 30);

        this.jLabelHost.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelHost.setText("Host");
        this.jPanel2.add(this.jLabelHost);
        this.jLabelHost.setBounds(100, 20, 30, 15);

        this.jLabelPorta.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelPorta.setText("Porta");
        this.jPanel2.add(this.jLabelPorta);
        this.jLabelPorta.setBounds(290, 20, 30, 16);
/*
        this.jTextFieldHost.addActionListener(new Listener() {
            public void actionPerformed(this.ActionEvent evt) {
                this.jTextFieldHostActionPerformed(evt);
            }
        });*/
        this.jPanel2.add(this.jtfHost);
        this.jtfHost.setBounds(130, 20, 160, 20);
/*
        this.jTextFieldPorta.addActionListener(new Listener() {
            public void actionPerformed(this.ActionEvent evt) {
                this.jTextFieldPortaActionPerformed(evt);
            }
        });*/
        this.jPanel2.add(this.jtfPorta);
        this.jtfPorta.setBounds(320, 20, 40, 20);

        this.jLabelDadosEnviados.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelDadosEnviados.setText("Dados Enviados");
        this.jPanel2.add(this.jLabelDadosEnviados);
        this.jLabelDadosEnviados.setBounds(10, 90, 100, 15);

        this.jLabelNumBytesEnviados.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelNumBytesEnviados.setText("Número de byres enviados: 0");
        this.jPanel2.add(this.jLabelNumBytesEnviados);
        this.jLabelNumBytesEnviados.setBounds(140, 90, 180, 15);

        this.jScrollPane1.setViewportView(this.jTextAreaDadosEnviados);

        this.jPanel2.add(this.jScrollPane1);
        this.jScrollPane1.setBounds(10, 104, 350, 80);

        getContentPane().add(this.jPanel2);
        this.jPanel2.setBounds(5, 60, 370, 190);

        this.jPanel3.setLayout(null);

        this.jPanel3.setBorder(new TitledBorder(new EtchedBorder(), "Diagrama de Tempo", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Microsoft Sans Serif", 0, 12), Color.red));
        this.jLabelEstado.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelEstado.setText("Estado");
        this.jPanel3.add(this.jLabelEstado);
        this.jLabelEstado.setBounds(10, 20, 45, 15);

        this.jLabelPrimitiva.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelPrimitiva.setText("Primitiva");
        this.jPanel3.add(this.jLabelPrimitiva);
        this.jLabelPrimitiva.setBounds(100, 20, 60, 15);

        this.jlSentido.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jlSentido.setText("Sentido");
        this.jPanel3.add(this.jlSentido);
        this.jlSentido.setBounds(179, 20, 60, 15);

        this.jlSegmento.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jlSegmento.setText("Seg.(NS,Tam,NACK,Jan)");
        this.jPanel3.add(this.jlSegmento);
        this.jlSegmento.setBounds(225, 20, 140, 16);

        this.jtaEstado.setEditable(false);
        this.jScrollPane2.setViewportView(this.jtaEstado);
        this.jScrollPane2.setBounds(10, 40, 90, 200);
        this.jScrollPane2.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        this.jPanel3.add(this.jScrollPane2);

//        this.jtaEstado.setBounds(10,40,90,200);
//        this.jtaEstado.setAlignmentY(0.0F);
//        this.jPanel3.add(this.jtaEstado);

        this.jtaPrimitiva.setEditable(false);
        this.jScrollPane3.setViewportView(this.jtaPrimitiva);
        this.jScrollPane3.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        this.jScrollPane3.setBounds(100, 40, 80, 200);
        this.jPanel3.add(this.jScrollPane3);

        this.jtaSentido.setFont(new Font("Monospaced", 0, 12));
        this.jtaSentido.setEditable(false);
        this.jScrollPane4.setViewportView(this.jtaSentido);
        this.jScrollPane4.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        this.jScrollPane4.setBounds(180, 40, 40, 200);
        this.jPanel3.add(this.jScrollPane4);

        this.jtaDescricaoSegmento.setEditable(false);
        this.jScrollPane5.setViewportView(this.jtaDescricaoSegmento);
        this.jScrollPane5.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        this.jScrollPane5.setBounds(220, 40, 140, 200);
        this.jPanel3.add(this.jScrollPane5);

        getContentPane().add(this.jPanel3);
        this.jPanel3.setBounds(5, 250, 370, 250);

        this.jPanel4.setLayout(null);

        this.jPanel4.setBorder(new TitledBorder(new EtchedBorder(), "Configura\u00e7\u00f5es", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Microsoft Sans Serif", 0, 12), Color.red));
        this.jButtonAjuda.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jButtonAjuda.setText("Ajuda");
        this.jButtonAjuda.setBorder(new BevelBorder(BevelBorder.RAISED));
        this.jPanel4.add(this.jButtonAjuda);
        this.jButtonAjuda.setBounds(10, 110, 80, 20);

        this.jButtonReset.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jButtonReset.setText("Reset");
        this.jButtonReset.setBorder(new BevelBorder(BevelBorder.RAISED));
        this.jButtonReset.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jbResetActionPerformed(evt);
            }
        });

        this.jPanel4.add(this.jButtonReset);
        this.jButtonReset.setBounds(120, 110, 70, 20);

        this.jLabelTimeout.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelTimeout.setText("Timeout (ms):");
        this.jPanel4.add(this.jLabelTimeout);
        this.jLabelTimeout.setBounds(10, 20, 130, 15);

        this.jLabelTamJan.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelTamJan.setText("Tam. Jan. (bytes):");
        this.jPanel4.add(this.jLabelTamJan);
        this.jLabelTamJan.setBounds(10, 50, 130, 15);

        this.jLabelTamSeg.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelTamSeg.setText("Tam. Seg (bytes):");
        this.jPanel4.add(this.jLabelTamSeg);
        this.jLabelTamSeg.setBounds(10, 80, 130, 15);

        this.jTextFieldTimeout.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextFieldTimeoutActionPerformed(evt);
            }
        });

        this.jPanel4.add(this.jTextFieldTimeout);
        this.jTextFieldTimeout.setText("3000");
        this.jTextFieldTimeout.setBounds(140, 20, 50, 20);

        this.jPanel4.add(this.jtfTamJan);
        this.jtfTamJan.setText("300");
        this.jtfTamJan.setBounds(140, 50, 50, 20);

        this.jPanel4.add(this.jTextFieldTamSeg);
        this.jTextFieldTamSeg.setText("100");
        this.jTextFieldTamSeg.setBounds(140, 80, 50, 20);

        getContentPane().add(this.jPanel4);
        this.jPanel4.setBounds(380, 0, 200, 140);

        this.jPanel5.setLayout(null);

        this.jPanel5.setBorder(new TitledBorder(new EtchedBorder(), "Informa\u00e7\u00f5es", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Microsoft Sans Serif", 0, 12), Color.red));
        this.jLabelEstAtual.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelEstAtual.setText("Est Atual (Tx/Rx)");
        this.jPanel5.add(this.jLabelEstAtual);
        this.jLabelEstAtual.setBounds(10, 20, 130, 15);

        this.jLabelNumSeq.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelNumSeq.setText("Nº Seq/Ult Conf");
        this.jPanel5.add(this.jLabelNumSeq);
        this.jLabelNumSeq.setBounds(10, 50, 130, 15);

        this.jLabelNumACK.setFont(new Font("Microsoft Sans Serif", 0, 12));
        this.jLabelNumACK.setText("Nº ACK");
        this.jPanel5.add(this.jLabelNumACK);
        this.jLabelNumACK.setBounds(10, 80, 130, 15);

        this.jPanel5.add(this.jTextFieldNumSeq);
        this.jTextFieldNumSeq.setBounds(140, 50, 50, 20);

        this.jtfEstAtual.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextFieldEstAtualActionPerformed(evt);
            }
        });

        this.jPanel5.add(this.jtfEstAtual);
        this.jtfEstAtual.setBounds(140, 20, 50, 20);

        this.jPanel5.add(this.jTextFieldNumACK);
        this.jTextFieldNumACK.setBounds(140, 80, 50, 20);

        getContentPane().add(this.jPanel5);
        this.jPanel5.setBounds(380, 140, 200, 110);

        this.jPanel6.setLayout(null);

        this.jPanel6.setBorder(new TitledBorder(new EtchedBorder(), "Dados Recebidos", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Microsoft Sans Serif", 0, 12), Color.red));
        this.jScrollPane6.setViewportView(this.jTextAreaDadosRecebidos);

        this.jPanel6.add(this.jScrollPane6);
        this.jScrollPane6.setBounds(10, 20, 180, 220);

        getContentPane().add(this.jPanel6);
        this.jPanel6.setBounds(380, 250, 200, 250);

        this.jLabel1.setForeground(new Color(51, 51, 255));
        this.jLabel1.setText("MEFrame - Powered by Java Technologies - Copyleft (L)2003 LARC/USP");
        this.jLabel1.setVerticalAlignment(SwingConstants.TOP);
        this.jPanel7.add(this.jLabel1);

        getContentPane().add(this.jPanel7);
        this.jPanel7.setBounds(10, 500, 570, 20);

        pack();
    }//GEN-END:initComponents

    private void jbActiveOpenActionPerformed(ActionEvent evt)
    {
        String args[] = new String[6];
        args[0] = Decoder.bytePontoToIpSimulado(this.jtfHost.getText());
        args[1] = this.jtfPorta.getText();
        args[2] = this.jTextAreaDadosEnviados.getText();
        args[3] = this.jTextFieldTimeout.getText();
        args[4] = this.jtfTamJan.getText();
        args[5] = this.jTextFieldTamSeg.getText();

        try
        {
            this.maquinaDeEstados.recebePrimitiva(TCP.P_ACTIVEOPEN, args);
            habilitaNovaConexao(false);            
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    private void jbPassiveOpenActionPerformed(ActionEvent evt)
    {
        String args[] = new String[6];
//        args[0] = Decoder.bytePontoToIpSimulado(this.jTextFieldHost.getText());
//        args[1] = this.jTextFieldPorta.getText();
        args[2] = this.jTextAreaDadosEnviados.getText();
        args[3] = this.jTextFieldTimeout.getText();
        args[4] = this.jtfTamJan.getText();
        args[5] = this.jTextFieldTamSeg.getText();

        try
        {
            this.maquinaDeEstados.recebePrimitiva(TCP.P_PASSIVEOPEN, args);
            
            habilitaNovaConexao(false);            
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    } // jbPassiveOpen

    private void jbEnviarActionPerformed(ActionEvent evt)
    {
        // FIXME Implementar jbEnviar
    } // jbEnviar

    private void jbCloseActionPerformed(ActionEvent evt)
    {
        String args[] = new String[6];
        args[0] = Decoder.bytePontoToIpSimulado(this.jtfHost.getText());
        args[1] = this.jtfPorta.getText();
        args[2] = this.jTextAreaDadosEnviados.getText();
        args[3] = this.jTextFieldTimeout.getText();
        args[4] = this.jtfTamJan.getText();
        args[5] = this.jTextFieldTamSeg.getText();
        
        try
        {
            this.maquinaDeEstados.recebePrimitiva(TCP.P_CLOSE, args);
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    } // jbClose
       
    private void jtfPortaActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextFieldPortaActionPerformed
    }//GEN-LAST:event_jTextFieldPortaActionPerformed

    private void jTextFieldEstAtualActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextFieldEstAtualActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextFieldEstAtualActionPerformed

    private void jTextFieldTimeoutActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextFieldTimeoutActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextFieldTimeoutActionPerformed

    private void jTextFieldHostActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextFieldHostActionPerformed
    }//GEN-LAST:event_jTextFieldHostActionPerformed

    private void jbResetActionPerformed(ActionEvent evt)
    {
         JOptionPane.showMessageDialog(null,"TimeoutTX: O host não enviou resposta.");
    }
    
    /** Exit the Application */
    private void exitForm(WindowEvent evt)
    {
        this.dispose();
        this.maquinaDeEstados.getMonitor().fechaMaquinaDeEstados(this.idConexao);
    }
    
    /**
     * Atualiza os dados da área de texto da tabela do diagrama de tempo
     *
     * Exemplo:
     * MaquinaDeEstadosFrame mef = new MaquinaDeEstadosFrame();\
     * mef.atualizaDadosEstado("Closed", "Act.Open", "->", "(0,0,0,300)");   
     *
     *
     * @param _estado O novo estado da máquina de estados da conexão
     * @param _primitiva O tipo de primitiva que está sendo utilizada
     * @param _sentido A direção do segmento (enviado: -> ou recebido: <-)
     * @param _segmento O segmento (NS, Tam, NACK, T.Jan)
     */
    public void atualizaDadosEstado(String _estado, String _primitiva, 
        String _sentido, String _segmento)
    {
        this.jtaEstado.append(_estado + "\n");
        this.jtaPrimitiva.append(_primitiva + "\n");
        this.jtaSentido.append(_sentido + "\n");
        this.jtaDescricaoSegmento.append(_segmento + "\n");
        
        this.jtaEstado.setCaretPosition(this.jtaEstado.getDocument().getLength());
        this.jtaPrimitiva.setCaretPosition(this.jtaPrimitiva.getDocument().getLength());
        this.jtaSentido.setCaretPosition(this.jtaSentido.getDocument().getLength());
        this.jtaDescricaoSegmento.setCaretPosition(this.jtaDescricaoSegmento.getDocument().getLength());
    }
    
    /**
     * Atualiza na interface as informações sobre a conexão
     * 
     * Exemplo:
     * MaquinaDeEstadosFrame mef = new MaquinaDeEstadosFrame();
     * mef.atualizaInfoConexao("Established", "10.0.0.1:3123", "1211", "", "");
     *
     *
     * @param _estado O estado atual da máquina de estados da conexão
     * @param _IPSimuladoLocal O IP Simulado Local da Conexão
     * @param _portaLocal A porta local da conexão
     * @param _IPSimuladoRemoto O IP Simulado Remoto da Conexão
     * @param _portaRemota A porta remota da conexão
     */
    public void atualizaInfoConexao(byte _estado, String _IPSimuladoLocal,
        String _portaLocal, String _IPSimuladoRemoto, String _portaRemota)
    {
        
        StringBuffer buffer = new StringBuffer();
        
        if(_IPSimuladoLocal.length() > 0)
            buffer.append (TCP.nomeEstado[_estado] + ". ( " + 
                    _IPSimuladoLocal + ", " + _portaLocal);
        
        if(!_IPSimuladoRemoto.equals(""))
            buffer.append("; " + _IPSimuladoRemoto + ", " + _portaRemota +  " )");
        else
            buffer.append("; -, - )");
        
        this.jLabelnformacoesConexao.setText(buffer.toString());
        
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton jbActiveOpen;
    private JButton jButtonAjuda;
    private JButton jbClose;
    private JButton jbEnviar;
    private JButton jbPassiveOpen;
    private JButton jButtonReset;
    private JLabel jLabel1;
    private JLabel jLabelDadosEnviados;
    private JLabel jlSegmento;
    private JLabel jLabelEstAtual;
    private JLabel jLabelEstado;
    private JLabel jLabelHost;
    private JLabel jLabelNumACK;
    private JLabel jLabelNumBytesEnviados;
    private JLabel jLabelNumSeq;
    private JLabel jLabelPorta;
    private JLabel jLabelPrimitiva;
    private JLabel jlSentido;
    private JLabel jLabelTamJan;
    private JLabel jLabelTamSeg;
    private JLabel jLabelTimeout;
    private JLabel jLabelnformacoesConexao;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JPanel jPanel5;
    private JPanel jPanel6;
    private JPanel jPanel7;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JScrollPane jScrollPane4;
    private JScrollPane jScrollPane5;
    private JScrollPane jScrollPane6;
    private JTextArea jTextAreaDadosEnviados;
    private JTextArea jTextAreaDadosRecebidos;
    private JTextArea jtaDescricaoSegmento;
    private JTextArea jtaEstado;
    private JTextArea jtaPrimitiva;
    private JTextArea jtaSentido;
    private JTextField jtfEstAtual;
    /** <code>jtfHost</code>: IPSimulado do host remoto */
    public JTextField jtfHost;
    private JTextField jTextFieldNumACK;
    private JTextField jTextFieldNumSeq;
    /** <code>jtfPorta</code>: Porta do host remoto */
    public JTextField jtfPorta;
    private JTextField jtfTamJan;
    private JTextField jTextFieldTamSeg;
    private JTextField jTextFieldTimeout;
    // End of variables declaration//GEN-END:variables
    private MaquinaDeEstados maquinaDeEstados;
    private int idConexao;
}
